---
- name: URI Test Playbook
  gather_facts: false
  hosts: localhost
  tasks:
    - name: Set Facts
      ansible.builtin.set_fact:
        cluster_address: <clustername.example.com>
        acs_central_endpoint: <central-stackrox.apps.clusterdomain.com>
        acs_api_token: <api_token>

    - name: Get ACS Admin Secret
      k8s_info:
        host: "https://api.{{ cluster_address }}:6443"
        validate_certs: no
        kind: Secret
        namespace: stackrox
        name: central-htpasswd
      register: acs_secret

    - debug:
        msg: "{{ acs_secret.resources[0].data.password }}"

    - name: Get ACS API Token
      ansible.builtin.uri:
        url: "https://{{ acs_central_endpoint }}/v1/apitokens/generate"
        validate_certs: no
        method: POST
        body_format: json
        status_code: [ 200 ]
        return_content: true
        headers:
          Content-Type: application/json
        user: admin
        password: <admin_password>
        force_basic_auth: true
        body:
          name: "sky-token"
          roles: ["Admin"]
      register: api_return

    - debug:
        msg: "{{ api_return.json.token }}"

#    - name: Get Policy IDs from ACS
#      ansible.builtin.uri:
#        url: "https://{{ acs_central_endpoint }}/v1/policies"
#        validate_certs: no
#        method: GET
#        body_format: json
#        status_code: [200]
#        return_content: true
#        headers:
#          Content-Type: application/json
#          Authorization: "Bearer {{ acs_api_token }}"
#      register: api_return
#
#    - name: Policy ID debug
#      debug:
#        msg: "{{ api_return.json.policies | json_query('[*].id') }}"
#
#    - set_fact:
#        policy_ids: "{{ api_return.json.policies | json_query('[*].id') }}"

#    - name: Get Alerts from ACS
#      ansible.builtin.uri:
#        url: "https://{{ acs_central_endpoint }}/v1/alerts"
#        validate_certs: no
#        method: GET
#        body_format: json
#        status_code: [ 200 ]
#        return_content: true
#        headers:
#          Content-Type: application/json
#          Authorization: "Bearer {{ acs_api_token }}"
#      register: api_return
#
#    - name: Alerts debug
#      debug:
#        msg: "{{ api_return.json }}"

#    - name: Get policies from ACS
#      ansible.builtin.uri:
#        url: "https://{{ acs_central_endpoint }}/v1/policies/export"
#        validate_certs: no
#        method: POST
#        body_format: json
#        status_code: [200]
#        return_content: true
#        headers:
#          Content-Type: application/json
#          Authorization: "Bearer {{ acs_api_token }}"
#        body:
#          policyIds: "{{ policy_ids }}"
#      register: api_return
#
#    - name: Policy debug
#      debug:
#        msg: "{{ api_return.json.policies }}"
#
#    - name: Copy Policies to file
#      copy:
#        content: "{{ api_return.json.policies }}"
#        dest: ./policies.out
#
#    - name: Import policies into ACS
#      ansible.builtin.uri:
#        url: "https://{{ acs_central_endpoint }}/v1/policies/import"
#        validate_certs: no
#        method: POST
#        body_format: json
#        status_code: [ 200 ]
#        return_content: true
#        headers:
#          Content-Type: application/json
#          Authorization: "Bearer {{ acs_api_token }}"
#        body:
#          metadata:
#            overwrite: true
#          policies: "{{ lookup('file', './policies.in') }}"
#      register: api_return
#
#    - name: Import debug
#      debug:
#        msg: "{{ api_return }}"
...
